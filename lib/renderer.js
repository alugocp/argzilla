// Argzilla error messages
const errors={
  missing_required:"Missing one or more required options",
  invalid_pnum:"Invalid number of parameters given",
  not_provided:"No value was given for option",
}

// Base class for renderers
function Renderer(config){

  let r={config};

  // Pipeline components
  // Override these in a new renderer
  r.comment = msg => {} // Writes a comment
  r.prestring = () => {} // Opening statements in the file
  r.poststring = () => {} // Closing statements in the file
  r.parse_loop = () => {} // Handles the arg parsing loop (should call mid_loop)
  r.check_flag = flag => {} // Adds a flag
  r.check_option = option => {} // Adds an option
  r.check_param = () => {} // Adds a parameter
  r.check_pnum = params => {} // Validates number of parameters
  r.check_required = option => {} // Validates required options

  // Pipeline control
  // Should remain the same across most renderers
  r.mid_loop = () =>
    (r.config.flags || []).map(x => r.check_flag(x)).reduce((a,v) => a+v,"") +
    (r.config.options || []).map(x => r.check_option(x)).reduce((a,v) => a+v,"") +
    r.check_param();
  r.required_clause = () => (r.config.options || [])
    .filter(x => x.required)
    .map(x => r.check_required(x))
    .reduce((a,v) => a+v,"");
  r.render = () =>
    r.comment("Autogenerated by LugoCorp's Argzilla") +
    r.prestring() +
    r.parse_loop() +
    (r.check_pnum(r.config.parameters) || "") +
    r.required_clause() +
    r.poststring();

  return r;
}

module.exports={Renderer,errors};
